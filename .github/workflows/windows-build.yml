name: build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install Visual Studio Build Tools 2022 with required components
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: '[17.4,18.0)'

    - name: Install 7zip
      run: |
        Invoke-WebRequest -Uri https://www.7-zip.org/a/7z2301-x64.exe -OutFile 7z.exe
        Start-Process .\7z.exe /S -Wait

    - name: Install MSYS2 manually (no Chocolatey)
      run: |
        Invoke-WebRequest -Uri https://mirror.msys2.org/distrib/x86_64/msys2-base-x86_64-20231026.tar.xz -OutFile msys2.tar.xz
        7z x msys2.tar.xz -aoa -omsys64 | Out-Null
        7z x msys2.tar -aoa -omsys64 | Out-Null
        echo "$env:GITHUB_WORKSPACE\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "$env:GITHUB_WORKSPACE\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Prepare autogen.input
      run: echo '--enable-release-builds' > autogen.input

    - name: Run autogen.sh inside MSYS2
      shell: msys2 {0}
      run: |
        cd "$GITHUB_WORKSPACE"
        ./autogen.sh

    - name: Build LibreOffice
      shell: msys2 {0}
      run: |
        cd "$GITHUB_WORKSPACE"
        make -j$(nproc)

    - name: Package Installer (MSI)
      shell: msys2 {0}
      run: |
        cd "$GITHUB_WORKSPACE"
        make installer

    - name: Upload build directory
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: build-instdir
        path: instdir

    - name: Upload MSI installer
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: tellesuite-installer
        path: workdir/installation/arch/windows/msi/Install/*.msi
